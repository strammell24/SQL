# For this Spotify project, I downloaded data from Kaggle 
# I then inserted the Spotify date into a table I created
# Lastly, I performed analytics on the Spotify data using SQL 

# Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# Next, I inserted the Spotify Data .csv into the table

# Then, I then observed and analyzed the data. 

# First, I determined the average popularity of tracks by Doja Cat.  

SELECT AVG(popularity) FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat';

# Then, I determined who the top 5 artists are based on popularity. 

SELECT artist_name, popularity 
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 5;

# Lastly, I dewtermined which track was the loudest. 

SELECT track_name 
FROM BIT_DB.Spotifydata
ORDER BY loudness Desc
LIMIT 1;

# I then created a CTE to help create a SQL query centered around the popularity of artists. I had to calculate the average popularity for artists in the 
Spotify table and then I had to show the artist name, average popularity and "Top Star" for each artist: 

WITH popularity_average_CTE AS(
SELECT s.artist_name, AVG (s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name)

SELECT artist_name, average_popularity, 'Top Star' as Tag
FROM popularity_average_CTE
WHERE average_popularity >= 90;








